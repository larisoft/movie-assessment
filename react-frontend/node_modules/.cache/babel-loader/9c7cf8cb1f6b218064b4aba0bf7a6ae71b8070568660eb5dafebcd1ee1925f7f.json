{"ast":null,"code":"var _jsxFileName = \"/Users/hilaryokeke/Projects/rest-api copy/react-frontend/src/components/MoviesList/MoviesList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBox from '../Searchbox/Searchbox';\nimport './MoviesList.css';\nimport DisplayMovie from '../DisplayMovie/DisplayMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesList() {\n  _s();\n  const [searchValue, setSearchValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const handleTextChange = text => {\n    if (text && text.length > 3) {\n      setSearchValue(text);\n    }\n  };\n  const handleMovieClick = movie => {\n    // Set the selected movie when a movie is clicked\n    setSelectedMovie(movie);\n  };\n  const handleBackClick = () => {\n    // Clear the selected movie to return to the list\n    setSelectedMovie(null);\n  };\n  useEffect(() => {\n    // Define a function to fetch movies based on the searchValue\n    const fetchMovies = async () => {\n      if (searchValue.trim() === '') {\n        setMovies([]);\n        return;\n      }\n      setLoading(true);\n      try {\n        let filteredSearchValue = searchValue.replace(' ', '+');\n        const response = await fetch(`http://localhost:5000/search-movie?search=${filteredSearchValue}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        const searchResult = data.search;\n\n        // Check if the data received is an array\n        if (Array.isArray(searchResult)) {\n          setMovies(searchResult); // Assuming the backend returns an array of movies\n        } else {\n          setMovies([]); // Set an empty array if the data is not an array\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center align-items-center search-container\",\n      children: /*#__PURE__*/_jsxDEV(SearchBox, {\n        value: searchValue,\n        setSearchValue: setSearchValue,\n        onTextChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), selectedMovie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 offset-md-4\",\n        children: /*#__PURE__*/_jsxDEV(DisplayMovie, {\n          movie: selectedMovie,\n          onBackClick: handleBackClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this) : Array.isArray(movies) && movies.length > 0 ? movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3 image-container d-flex justify-content-start m-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.poster,\n              alt: movie.title,\n              onClick: () => handleMovieClick(movie)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlay d-flex align-items-center justify-content-center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this)]\n          }, movie.imdbID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No movies found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesList, \"UEAaU1yE8irH8a3gz1LnusQm9k4=\");\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["React","useState","useEffect","SearchBox","DisplayMovie","jsxDEV","_jsxDEV","MoviesList","_s","searchValue","setSearchValue","movies","setMovies","loading","setLoading","selectedMovie","setSelectedMovie","handleTextChange","text","length","handleMovieClick","movie","handleBackClick","fetchMovies","trim","filteredSearchValue","replace","response","fetch","ok","Error","data","json","searchResult","search","Array","isArray","error","console","className","children","value","onTextChange","fileName","_jsxFileName","lineNumber","columnNumber","onBackClick","map","index","src","poster","alt","title","onClick","imdbID","_c","$RefreshReg$"],"sources":["/Users/hilaryokeke/Projects/rest-api copy/react-frontend/src/components/MoviesList/MoviesList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBox from '../Searchbox/Searchbox';\nimport './MoviesList.css';\n\nimport DisplayMovie from '../DisplayMovie/DisplayMovie';\n\nfunction MoviesList() {\n  const [searchValue, setSearchValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false); \n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const handleTextChange = (text) => {\n    if (text && text.length > 3) {\n      setSearchValue(text);\n    }\n  };\n\n  const handleMovieClick = (movie) => {\n    // Set the selected movie when a movie is clicked\n    setSelectedMovie(movie);\n  };\n\n  const handleBackClick = () => {\n    // Clear the selected movie to return to the list\n    setSelectedMovie(null);\n  };\n\n  useEffect(() => {\n    // Define a function to fetch movies based on the searchValue\n    const fetchMovies = async () => {\n      if (searchValue.trim() === '') {\n        setMovies([]);\n        return;\n      }\n\n      setLoading(true);\n\n      try {\n        let filteredSearchValue = searchValue.replace(' ', '+');\n        const response = await fetch(`http://localhost:5000/search-movie?search=${filteredSearchValue}`);\n       \n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n\n        const searchResult = data.search; \n\n        // Check if the data received is an array\n        if (Array.isArray(searchResult)) {\n          setMovies(searchResult); // Assuming the backend returns an array of movies\n        } else {\n          setMovies([]); // Set an empty array if the data is not an array\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [searchValue]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"row justify-content-center align-items-center search-container\">\n        <SearchBox value={searchValue} setSearchValue={setSearchValue} onTextChange={handleTextChange} />\n      </div>\n      {selectedMovie ? (\n        <div className=\"row\">\n          <div className=\"col-md-4 offset-md-4\">\n            <DisplayMovie movie={selectedMovie} onBackClick={handleBackClick} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"row list-container\">\n          <div className='col-md-2'></div>\n          <div className='col-md-8'>\n            <div className='row text-center'>\n              {loading ? (\n                <p>Loading...</p>\n              ) : (\n                Array.isArray(movies) && movies.length > 0 ? (\n                  movies.map((movie, index) => (\n                    <div className='col-md-3 image-container d-flex justify-content-start m-3' key={movie.imdbID}>\n                      <img src={movie.poster} alt={movie.title} onClick={() => handleMovieClick(movie)}></img>\n                      <div className='overlay d-flex align-items-center justify-content-center'></div>\n                    </div>\n                  ))\n                ) : (\n                  <p>No movies found.</p>\n                )\n              )}\n            </div>\n          </div>\n          <div className='col-md-2'></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MoviesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}